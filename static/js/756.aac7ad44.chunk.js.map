{"version":3,"file":"static/js/756.aac7ad44.chunk.js","mappings":"8PACA,GAAiB,E,kBCoGjB,EA9FqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAmBhD,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIb,GAAa,GAFjB,UAI0Bc,EAAAA,EAAAA,IAAgBT,GAJ1C,OAIUU,EAJV,OAKIX,EAAeW,GACff,GAAa,GANjB,gDAQIE,GAAW,GACXF,GAAa,GATjB,0DADc,uBAAC,WAAD,wBAcdgB,EACD,GAAE,CAACX,KAGF,iBAAKY,UAAWF,EAAAA,UAAhB,WACE,mBAAQE,UAAWF,EAAAA,UAAnB,UACE,SAAC,KAAD,CAAMG,GAAIT,EAASU,QAAnB,UACE,0BAAM,eAGTpB,IAAa,SAACqB,EAAA,EAAD,IACbnB,IACC,iBAAMgB,UAAWF,EAAAA,MAAjB,SAAgC,6CAIjCZ,IACC,iBAAKc,UAAWF,EAAAA,eAAhB,WACE,gBAAKE,UAAWF,EAAAA,WAAhB,UACE,gBACEM,IAAG,UAvCE,mCAuCF,OAAgBlB,EAAYmB,KAAKC,aACpCC,IAAKrB,EAAYmB,KAAKG,WAI1B,iBAAKR,UAAWF,EAAAA,aAAhB,WACE,eAAGE,UAAWF,EAAAA,kBAAd,UAAyC,aAEvC,iBAAME,UAAWF,EAAAA,eAAjB,SACGZ,EAAYmB,KAAKI,eAItB,eAAGT,UAAWF,EAAAA,kBAAd,UAAyC,UAEtCZ,EAAYmB,KAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpB,iBAAMZ,UAAWF,EAAAA,eAAjB,SACGc,GAD2CD,EAD1B,QAMxB,cAAGX,UAAWF,EAAAA,kBAAd,UACE,kBAAME,UAAWF,EAAAA,eAAjB,UAAyC,YAC7BZ,EAAYmB,KAAKQ,mBAI/B,cAAGb,UAAWF,EAAAA,kBAAd,UACE,kBAAME,UAAWF,EAAAA,eAAjB,UAAyC,iBACxBZ,EAAYmB,KAAKS,sBAItC,gBAAId,UAAWF,EAAAA,QAAf,WACE,eAAIE,UAAWF,EAAAA,YAAf,UACE,SAAC,KAAD,CAAMG,GAAI,OAAV,SAAkB,YAEpB,eAAID,UAAWF,EAAAA,YAAf,UACE,SAAC,KAAD,CAAMG,GAAI,UAAV,SAAqB,qBAM7B,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAACb,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["Pages/MovieDetails.module.css","Pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { getMovieDetails } from 'fetchMovies';\nimport React, { useState, useEffect, useRef, Suspense } from 'react';\n\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport details from './MovieDetails.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [detailsData, setDetailsData] = useState('');\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n  const { movieId } = useParams();\n  const location = useLocation();\n  const linkBack = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setIsLoading(true);\n\n        const details = await getMovieDetails(movieId);\n        setDetailsData(details);\n        setIsLoading(false);\n      } catch (error) {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    }\n\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <div className={details.container}>\n      <button className={details.goBackBtn}>\n        <Link to={linkBack.current}>\n          <span>&#10229;</span>\n        </Link>\n      </button>\n      {isLoading && <Loader />}\n      {isError && (\n        <span className={details.error}>\n          Error occurred, try again in few seconds\n        </span>\n      )}\n      {detailsData && (\n        <div className={details.detailsWrapper}>\n          <div className={details.imgWrapper}>\n            <img\n              src={`${BASE_IMG}${detailsData.data.poster_path}`}\n              alt={detailsData.data.title}\n            />\n          </div>\n\n          <div className={details.detailsDescr}>\n            <p className={details.detailsDescrTitle}>\n              Overview:\n              <span className={details.detailsSummary}>\n                {detailsData.data.overview}\n              </span>\n            </p>\n\n            <p className={details.detailsDescrTitle}>\n              Genres:\n              {detailsData.data.map(({ id, name }) => (\n                <span className={details.detailsSummary} key={id}>\n                  {name}\n                </span>\n              ))}\n            </p>\n            <p className={details.detailsDescrTitle}>\n              <span className={details.detailsSummary}>\n                Avarage: {detailsData.data.vote_avarage}\n              </span>\n            </p>\n\n            <p className={details.detailsDescrTitle}>\n              <span className={details.detailsSummary}>\n                Release Date: {detailsData.data.release_date}\n              </span>\n            </p>\n          </div>\n          <ul className={details.buttons}>\n            <li className={details.buttonsItem}>\n              <Link to={'cast'}>Cast</Link>\n            </li>\n            <li className={details.buttonsItem}>\n              <Link to={'reviews'}>Reviews</Link>\n            </li>\n          </ul>\n        </div>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","isLoading","setIsLoading","isError","setIsError","detailsData","setDetailsData","movieId","useParams","location","useLocation","linkBack","useRef","state","from","useEffect","getMovieDetails","details","getDetails","className","to","current","Loader","src","data","poster_path","alt","title","overview","map","id","name","vote_avarage","release_date","Suspense","fallback"],"sourceRoot":""}
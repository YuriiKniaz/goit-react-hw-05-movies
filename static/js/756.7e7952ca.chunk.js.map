{"version":3,"file":"static/js/756.7e7952ca.chunk.js","mappings":"8PACA,GAAgB,UAAY,gCAAgC,UAAY,gCAAgC,aAAe,mCAAmC,eAAiB,qCAAqC,WAAa,iCAAiC,aAAe,mCAAmC,kBAAoB,wCAAwC,eAAiB,qCAAqC,qBAAuB,2CAA2C,QAAU,8BAA8B,YAAc,mC,kBCsG1hB,EAhGqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,MAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAoBhD,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIb,GAAa,GAFjB,UAI2Bc,EAAAA,EAAAA,IAAgBT,GAJ3C,OAIUU,EAJV,OAKIX,EAAeW,GACff,GAAa,GANjB,gDAQIgB,QAAQC,IAAI,KAAMC,SAClBhB,GAAW,GACXF,GAAa,GAVjB,0DADc,uBAAC,WAAD,wBAedmB,EACD,GAAE,CAACd,KAGF,iBAAKe,UAAWC,EAAAA,UAAhB,WACE,mBAAQD,UAAWC,EAAAA,UAAnB,UACE,SAAC,KAAD,CAAMC,GAAIb,EAASc,QAAnB,UACE,iBAAMH,UAAWC,EAAAA,aAAjB,SAAuC,gBAG1CtB,IAAa,SAACyB,EAAA,EAAD,IACbvB,IACC,iBAAMmB,UAAWC,EAAAA,MAAjB,SAAgC,6CAIjClB,IACC,iBAAKiB,UAAWC,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,WAAhB,UACE,gBACED,UAAWC,EAAAA,WACXI,IAAG,UAzCE,mCAyCF,OAAgBtB,EAAYuB,KAAKC,aACpCC,IAAKzB,EAAYuB,KAAKG,WAI1B,iBAAKT,UAAWC,EAAAA,aAAhB,WACE,eAAGD,UAAWC,EAAAA,kBAAd,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,SAAyC,eACxClB,EAAYuB,KAAKI,aAGpB,eAAGV,UAAWC,EAAAA,kBAAd,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,SAAyC,aACxClB,EAAYuB,KAAKK,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC3B,kBAAMd,UAAWC,EAAAA,qBAAjB,UACGa,EAAK,SAD4CD,EADzB,QAM/B,eAAGb,UAAWC,EAAAA,kBAAd,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,SAAyC,cACxClB,EAAYuB,KAAKS,iBAGpB,eAAGf,UAAWC,EAAAA,kBAAd,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,SAAyC,mBACxClB,EAAYuB,KAAKU,oBAGtB,gBAAIhB,UAAWC,EAAAA,QAAf,WACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,YAAqBC,GAAG,OAAzC,SAAgD,YAIlD,yBACE,SAAC,KAAD,CAAMF,UAAWC,EAAAA,YAAqBC,GAAG,UAAzC,SAAmD,qBAQ3D,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACd,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://goit-react-hw-05-movies/./src/Pages/MovieDetails.module.css?40ae","Pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__WJiF1\",\"goBackBtn\":\"MovieDetails_goBackBtn__6efmI\",\"goBackBtnTag\":\"MovieDetails_goBackBtnTag__kFzyU\",\"detailsWrapper\":\"MovieDetails_detailsWrapper__cIz7K\",\"detailsImg\":\"MovieDetails_detailsImg__uP6LU\",\"detailsDescr\":\"MovieDetails_detailsDescr__Qnba2\",\"detailsDescrTitle\":\"MovieDetails_detailsDescrTitle__hh3xu\",\"detailsSummary\":\"MovieDetails_detailsSummary__jxaUX\",\"detailsSummaryGenres\":\"MovieDetails_detailsSummaryGenres__lpERH\",\"buttons\":\"MovieDetails_buttons__Ygm66\",\"buttonsItem\":\"MovieDetails_buttonsItem__xAjuj\"};","import { getMovieDetails } from 'fetchMovies';\nimport React, { useState, useEffect, useRef, Suspense } from 'react';\n\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport details from './MovieDetails.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [detailsData, setDetailsData] = useState(null);\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w300';\n  const { movieId } = useParams();\n  const location = useLocation();\n  const linkBack = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setIsLoading(true);\n\n        const response = await getMovieDetails(movieId);\n        setDetailsData(response);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n        setIsError(true);\n        setIsLoading(false);\n      }\n    }\n\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <div className={details.container}>\n      <button className={details.goBackBtn}>\n        <Link to={linkBack.current}>\n          <span className={details.goBackBtnTag}>Go back</span>\n        </Link>\n      </button>\n      {isLoading && <Loader />}\n      {isError && (\n        <span className={details.error}>\n          Error occurred, try again in few seconds\n        </span>\n      )}\n      {detailsData && (\n        <div className={details.detailsWrapper}>\n          <div className={details.imgWrapper}>\n            <img\n              className={details.detailsImg}\n              src={`${BASE_IMG}${detailsData.data.poster_path}`}\n              alt={detailsData.data.title}\n            />\n          </div>\n\n          <div className={details.detailsDescr}>\n            <p className={details.detailsDescrTitle}>\n              <span className={details.detailsSummary}>Overview: </span>\n              {detailsData.data.overview}\n            </p>\n\n            <p className={details.detailsDescrTitle}>\n              <span className={details.detailsSummary}>Genres: </span>\n              {detailsData.data.genres.map(({ id, name }) => (\n                <span className={details.detailsSummaryGenres} key={id}>\n                  {name}&nbsp;\n                </span>\n              ))}\n            </p>\n            <p className={details.detailsDescrTitle}>\n              <span className={details.detailsSummary}>Avarage: </span>\n              {detailsData.data.vote_average}\n            </p>\n\n            <p className={details.detailsDescrTitle}>\n              <span className={details.detailsSummary}>Release Date: </span>\n              {detailsData.data.release_date}\n            </p>\n          </div>\n          <ul className={details.buttons}>\n            <li>\n              <Link className={details.buttonsItem} to=\"cast\">\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link className={details.buttonsItem} to=\"reviews\">\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","isLoading","setIsLoading","isError","setIsError","detailsData","setDetailsData","movieId","useParams","location","useLocation","linkBack","useRef","state","from","useEffect","getMovieDetails","response","console","log","message","getDetails","className","details","to","current","Loader","src","data","poster_path","alt","title","overview","genres","map","id","name","vote_average","release_date","Suspense","fallback"],"sourceRoot":""}
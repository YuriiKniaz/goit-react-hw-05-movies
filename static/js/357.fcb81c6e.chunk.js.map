{"version":3,"file":"static/js/357.fcb81c6e.chunk.js","mappings":"gRACA,GAAiB,E,SC0FjB,EApFoB,WAAO,IAAD,EACxB,GAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAAwBR,EAAAA,EAAAA,UAAS,GAAjC,eAAOS,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,IAAKF,EAAO,OAAOR,GAAY,EAChC,GAAE,CAACQ,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAKF,EAAO,OAAON,EAAe,IADpB,wCAGd,oGAEIN,GAAa,GACbE,GAAW,GAHf,UAKuBa,EAAAA,EAAAA,IAAeH,EAAOL,GAL7C,OAKUS,EALV,OAOiB,IAATT,EACFD,EAAeU,EAAKA,KAAKC,UAEzBX,GAAe,SAAAY,GAAU,wBAAQA,IAAR,OAAuBF,EAAKA,KAAKC,SAAjC,IACzBb,EACEY,EAAKA,KAAKG,YAAcC,KAAKC,KAAKL,EAAKA,KAAKM,aAAe,MAG/DlB,GAAY,GACZJ,GAAa,GAhBjB,kDAkBIE,GAAW,GACXF,GAAa,GAnBjB,2DAHc,0DA0BduB,EACD,GAAE,CAACb,EAAcH,EAAMK,IAaxB,OACE,iBAAKY,UAAWC,EAAAA,UAAhB,WACE,uBAAG,YACH,kBACEC,KAAK,OACLC,YAAY,SACZC,MAAOhB,EACPiB,SAde,SAAAC,GACnB,GAAuB,KAAnBA,EAAEC,OAAOH,MACX,OAAOjB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOkB,EAAEC,OAAOH,OACnC,IAWI7B,IAAa,SAACiC,EAAA,EAAD,IACb/B,GACC,iBAAMuB,UAAWC,EAAAA,MAAjB,SAAoC,6CAIpCpB,EAAY4B,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWC,OAAQ9B,IAE9CF,IACC,mBACEqB,UAAWC,EAAAA,SACXC,KAAK,SACLU,QAhCW,WACjB5B,GAAQ,SAAA6B,GAAQ,OAAIA,EAAW,CAAf,GACjB,EA2BK,SAIC,gBAMR,C,2FCtFYC,EAAY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC1CC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYL,GAAWM,MAAO,CAAEC,KAAMJ,GAA9C,UACE,gBAAKK,IAAG,UALG,mCAKH,OAAgBP,GAAeQ,IAAKP,OAInD,ECbD,GAAiB,ECGJP,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,eAAIX,UAAWyB,EAAAA,UAAf,SACGd,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOW,EAA3B,EAA2BA,KAA3B,OACV,SAACd,EAAD,CAAoBE,YAAaA,EAAaC,MAAK,OAAEW,QAAF,IAAEA,EAAAA,EAAQX,GAA7CU,EADN,KAKjB,C","sources":["Pages/MovieSearch.module.css","Pages/MovieSearch.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.module.css","components/MovieList/MovieList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'fetchMovies';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\nimport movieSearch from './MovieSearch.module.css';\n\nconst MovieSearch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n  const [moviesQuery, setMoviesQuery] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return setLoadMore(false);\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return setMoviesQuery([]);\n\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        setIsError(false);\n\n        const data = await getSearchMovie(query, page);\n\n        if (page === 1) {\n          setMoviesQuery(data.data.results);\n        } else {\n          setMoviesQuery(prevMovies => [...prevMovies, ...data.data.results]);\n          setLoadMore(\n            data.data.total_pages < Math.ceil(data.data.total_result / 12)\n          );\n        }\n        setLoadMore(true);\n        setIsLoading(false);\n      } catch {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, [searchParams, page, query]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const queryRequest = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n  };\n\n  return (\n    <div className={movieSearch.container}>\n      <p>Search</p>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={query}\n        onChange={queryRequest}\n      />\n      {isLoading && <Loader />}\n      {isError ? (\n        <span className={movieSearch.error}>\n          Error occurred, try again in few seconds\n        </span>\n      ) : (\n        moviesQuery.length > 0 && <MovieList movies={moviesQuery} />\n      )}\n      {loadMore && (\n        <button\n          className={movieSearch.loadMore}\n          type=\"button\"\n          onClick={onLoadMore}\n        >\n          Load More\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MovieItem = ({ movieId, poster_path, title }) => {\n  const location = useLocation();\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <li>\n      <Link to={`/movie/${movieId}`} state={{ from: location }}>\n        <img src={`${BASE_IMG}${poster_path}`} alt={title} />\n      </Link>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport movieList from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={movieList.movieList}>\n      {movies.map(({ id, poster_path, title, name }) => (\n        <MovieItem key={id} poster_path={poster_path} title={name ?? title} />\n      ))}\n    </ul>\n  );\n};\n"],"names":["useState","isLoading","setIsLoading","isError","setIsError","loadMore","setLoadMore","moviesQuery","setMoviesQuery","page","setPage","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchMovie","data","results","prevMovies","total_pages","Math","ceil","total_result","getMovies","className","movieSearch","type","placeholder","value","onChange","e","target","Loader","length","MovieList","movies","onClick","prevPage","MovieItem","movieId","poster_path","title","location","useLocation","to","state","from","src","alt","movieList","map","id","name"],"sourceRoot":""}